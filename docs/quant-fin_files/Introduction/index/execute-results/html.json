{
  "hash": "09ff17b74f89ae85c797249d26147690",
  "result": {
    "engine": "knitr",
    "markdown": "---\n#title: \"Risk and Return\"\nauthor: \"Lucas S. Macoris\"\nformat:\n  live-revealjs:\n    title: 'Introduction and Course Overview'\n    theme: [default, ../~ Metadata/custom.scss]\n    auto-stretch: false\n    author: 'Lucas S. Macoris'\n    logo: '/Images/logo.jpg'\n    footer: \"[@ Website](https://lsmacoris.github.io/) | [@ Slides](https://lsmacoris.github.io/lectures/quant-fin) | [@ Office-hour appointments](https://calendly.com/lucas-macoris-fgv/appointment-lsm)\"\n    toc: false\n    cls: ../~ Metadata/abntex2.cls\n    incremental: false\n    bibliography: '../~ Metadata/Bibliography.bib'\n    slide-number: true\n    show-slide-number: all\n    transition: slide\n    background-transition: fade\n    chalkboard: true\n    width: 1600\n    height: 900\n    smaller: false\n    show-hints: true\n    show-solutions: true\n    webr:\n      packages:\n        - tidyverse\n        - xts\n        - glue\n      resources:\n        - Assets\n      render-df: gt-interactive\n\neditor: visual\nfrom: markdown+emoji\n---\n\n::: {.cell}\n\n:::\n\n\n\n\nThis page was intentionally left blank\n\n\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| output: false\nwebr::install(\"gradethis\", quiet = TRUE)\nlibrary(gradethis)\noptions(webr.exercise.checker = function(\n  label, user_code, solution_code, check_code, envir_result, evaluate_result,\n  envir_prep, last_value, engine, stage, ...\n) {\n  if (is.null(check_code)) {\n    # No grading code, so just skip grading\n    invisible(NULL)\n  } else if (is.null(label)) {\n    list(\n      correct = FALSE,\n      type = \"warning\",\n      message = \"All exercises must have a label.\"\n    )\n  } else if (is.null(solution_code)) {\n    list(\n      correct = FALSE,\n      type = \"warning\",\n      message = htmltools::tags$div(\n        htmltools::tags$p(\"A problem occurred grading this exercise.\"),\n        htmltools::tags$p(\n          \"No solution code was found. Note that grading exercises using the \",\n          htmltools::tags$code(\"gradethis\"),\n          \"package requires a model solution to be included in the document.\"\n        )\n      )\n    )\n  } else {\n    gradethis::gradethis_exercise_checker(\n      label = label, solution_code = solution_code, user_code = user_code,\n      check_code = check_code, envir_result = envir_result,\n      evaluate_result = evaluate_result, envir_prep = envir_prep,\n      last_value = last_value, stage = stage, engine = engine)\n  }\n})\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Welcome to the Course\n\n::: nonincremental\n1.  Overview and Course Organization\n2.  Grading and Evaluations\n3.  Navigating through the syllabus\n4.  How you can get the best of this course\n5.  Overall Q&A\n:::\n\n## Overview\n\n-   With the recent advances in technical resources and the vast availability of financial information, finance practitioners are required to generate reproducible and scalable analysis in a timely fashion to guide decision-making:\n\n    1.  How can I *continuously* optimize the risk-return trade-off of my portfolio over time?\n    2.  What is the sensitivity of my investment decisions to changes in growth rates, discount rates, and expected margins?\n    3.  How can I assess the ability of a given trading strategy to outperform the market over time?\n\n. . .\n\n$\\rightarrow$ *To that point, departing from the general tools, such as Excel, to more advanced tools, such as* [{{<fa brands r-project>}}]{.blue} and [{{<fa brands python>}}]{.blue}, *is an imperative change!*\n\n-   **The goal of this course**: translate [theoretical concepts]{.blue} learned on the core finance courses to [practical applications]{.blue} that can guide decision making in real-world financial markets\n\n## Course Structure\n\n-   This is a [hands-on]{.blue}, [practical]{.blue} course on *Quantitative Finance* with applications using [{{<fa brands r-project>}}]{.blue} and [{{<fa brands python>}}]{.blue}, two of the most widely used open-source software for data analysis. It will be structured in topics that are of interest to Finance practitioners, aiming to include, but not limited to:\n\n    1.  Collecting and organizing financial data\n    2.  CAPM, Fama-French, and multi-factor models of risk\n    3.  Equily Valuation, sensitivity analysis, and Simulation\n    4.  Portfolio optimization and strategy backtesting\n    5.  Event Analysis\n    6.  Sentiment Analysis\n\n-   Students are also expected to interact with leading industry practitioners focused on financial applications using open-source languages, aiming to discover more about the possibilities of applying the skills learned in this course in the financial industry\n\n## Bibliography\n\n::: nonincremental\n-   **Coursework**: we will mostly follow *Tidy Finance* [@tidyfinance], as our text-book. Other relevant reading materials include:\n    1.  *R for Data Science* [@r4ds]\n    2.  *Mastering Shiny* [@shiny]\n-   **Supplementary Reading**:\n    1.  *Corporate Finance* [@BDM] - a companion for finance-related topics\n    2.  Other optional contents, such as *Harvard Business School (HBS) Cases*\n:::\n\n::: callout-tip\n### Important\n\nMost of the references listed in this bibliography have an open-source version that is hosted online, where you can copy-paste code chunks directly into your [{{<fa brands r-project>}}]{.blue} session. All contents with restricted access will be provided upfront.\n:::\n\n## Grading and Evaluations\n\n. . .\n\n**Grading will be composed of the following activities:**\n\n1.  Handout Data Cases (**40%**)\n2.  Capstone Project (**40%**)\n3.  Project Showcase (**15%**)\n4.  In-class Participation (**5%**)\n\n. . .\n\n-   You can find the details of any of these activities in the official syllabus (available on *eClass®*)\n-   In case of any questions, feel free to reach out to [lucas.macoris\\@fgv.br](mailto:lucas.macoris@fgv.br)\n\n. . .\n\n::: callout-important\n### Office-hours\n\nI also host office-hours (by appointment) on Thursdays, 5PM-6PM. In these sessions, I'll be more than happy to help you with anything you need from this course. Use the *Office-hour Appointments* link at the bottom of this slide to schedule an appointment (or click [here](https://calendly.com/lucas-macoris-fgv/appointment-lsm)).\n:::\n\n## Getting the best of this course\n\n![](Images/what-a-week.jpeg){width=\"50%,\" fig-align=\"center\"}\n\n## Getting the best of this course, continued\n\n-   **Tech setup**: in the [official page](https://lsmacoris.github.io/lectures/quant-fin.html) of your course, you will find instructions on how to properly set up your computer in terms of downloading all necessary softwares, packages, and customizing your [{{<fa brands r-project>}}]{.blue} session[^1]\n\n-   **Code Replication**: right after we are done with a given topic, try to replicate the in-class handouts on your end and check if you are able to yield the same outputs\n\n-   **Showcase**: *programming*, *data science*, *analytics*, *machine learning*, and so on...these terms are on the hype of today's job market - although few people *really* know how to make meaningful impact with it. Use this course as an opportunity to differentiate and showcase the skills you've learned and stand out to potential employers[^2]\n\n[^1]: While we will be using *FGV-EAESP*'s facilities, where you will have immediate access to all the necessary configurations, ensure to setup your personal computer so as to ensure that you can replicate the contents from the lectures.\n\n[^2]: See [*Artificial Intelligence is losing hype*](https://www.economist.com/finance-and-economics/2024/08/19/artificial-intelligence-is-losing-hype) (*The Economist*)\n\n## On the usage of *gen-AI*\n\n::: callout-important\n### On the usage of ChatGPT and other *gen-AI* tools\n\nGenerative Artificial Intelligent (*gen-AI*) adoption is quickly spreading through corporate life and universities. At this point, it is worth the question...[am I allowed to use *gen-AI* tools in this course]{.blue}?\n:::\n\n-   The answer is [yes]{.blue}! Not only you are *allowed*, but also *encouraged* to do so:\n    1.  Use *gen-AI* tools to proof-read your work, get insights, and troubleshoot errors\n    2.  Learn to be *skeptical* around the solutions you have been provided with\n    3.  Evaluations will be based on *how* you can [interpret]{.blue}, [understand]{.blue}, and [showcase]{.blue} your solution to the broader audience!\n\n. . .\n\n$\\rightarrow$ See [*AI-powered coding pulls in almost \\$1bn of funding to claim ‘killer app’ status*](https://www.ft.com/content/4868bd38-613c-4fa9-ba9d-1ed8fa8a40c8) (*Financial Times*)\n\n## How to use these slides\n\n-   These slides leverage [Quarto](quarto.org), an open-source scientific and technical publishing system from [Posit](https://posit.co) (formerly RStudio):\n\n    1.  Create dynamic content with [{{<fa brands r-project>}}]{.blue}, [{{<fa brands python>}}]{.blue}, [{{<fa brands react>}}]{.blue}, among other programming languages\n    2.  Publish reproducible, production quality articles, presentations, dashboards, websites, blogs, and books in *HTML*, *PDF*, *Word*, *ePub*, and more\n    3.  Write beatufil, clean technical documents using markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more\n\n-   For our course, we'll use the following notation:\n\n1.  Links will be colored in [blue](https://google.com)\n2.  Inline equations and variables will be rendered in `gray`\n3.  Code chunks will be provided along with outputs (`R`)\n\n## An example of a code chunk\n\n:::: panel-tabset\n### Result\n\n::: callout-note\nIn the `R` panel, hit *Show the Code* to display the code inside the tabset. Hit the {{< fa clipboard >}} button at the top-right to copy it to your session.\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n### R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndat <- data.frame(cond = rep(c(\"A\", \"B\"), each=10),\n                  xvar = 1:20 + rnorm(20,sd=3),\n                  yvar = 1:20 + rnorm(20,sd=3))\n\nggplot(dat, aes(x=xvar, y=yvar)) +\n  geom_point(shape=1) + \n  geom_smooth()\n```\n:::\n\n\n::::\n\n## Interactive Learning\n\n::: {#lst-example}\n\n\n::: {.cell completion='true' min-lines='7' max-lines='20'}\n```{webr}\n#| completion: true\n#| min-lines: 7\n#| max-lines: 20\n#| fig-width: 8\n#| fig-height: 4\n#Set the ticker\nticker='AAPL'\n#Read the data\nread.csv(glue('Assets/{ticker}.csv'))%>%\n#Select the first two columns\nselect(Timestamp,Adjusted)%>%\nmutate(Timestamp=as.Date(Timestamp))%>%\n#Transform to time-series based object and plot\nas.xts()%>%plot(main=glue('{ticker} prices are skyrocketing! 🚀'))\n```\n:::\n\n\n\nWe will extensively leverage interactive learning whenever possible. In selected sections, called `Listings`, you will be prompted with an interactive `R` console that you can use to run existing and new code to a \"virtual\" session. Try changing the ticker to `NVDA` and check if anything has changed.\n:::\n\n## Interactive Learning, continued\n\n:::::: panel-tabset\n## Exercise\n\n::: {#lst-ex1}\n\n\n::: {.cell caption='Sample Exercise' exercise='ex1' completion='true' min-lines='7' max-lines='20'}\n```{webr}\n#| caption: Sample Exercise\n#| exercise: ex1\n#| completion: true\n#| min-lines: 7\n#| max-lines: 20\n#| fig-width: 8\n#| fig-height: 4\n\n#Set the ticker\nData=read.csv(glue('Assets/_____.csv'))\nData=select(Data,c(Timestamp,_____))\nData=tail(Data,__)\nData\n```\n:::\n\n\n\nYou can use the `Hints` and `Solution` buttons to interact with the prompt. Even if you submit the wrong answer, a live-tutoring feature will provide you with a handful of tips to adjust your code and resubmit your solution. For example, complete the code to read Microsoft price (`MSFT.csv`) data and select the latest 10 OHLC (Open, High, Low, Close) information. The dataset is arranged in descendant format (latest price information is at the bottom of the table).\n:::\n\n## Hints\n\n::: {.hint exercise=\"ex1\"}\nYou can access the names of the columns using `names(Data)` to find the column that refers to closing prices:\n\n``` r\nnames(Data)\n```\n\nYou can also select specific columns by using the `select()` function:\n\n``` r\nselect(Data,c(column1,column2,...,column_n))`\n```\n:::\n\n## Solution\n\n::: {.solution exercise=\"ex1\"}\nFirst, use the `names()` function to retrieve the names of the columns available in the dataset.\n\nAfter that, use the `tail()` function to retrieve only the latest 10 observations.\n\n\n\n::: {.cell exercise='ex1' solution='true'}\n```{webr}\n#| exercise: ex1\n#| solution: true\n\n#Set the ticker\nData=read.csv(glue('Assets/MSFT.csv'))\nData=select(Data,c(Timestamp,Open,High,Low,Close))\nData=tail(Data,10)\nData\n```\n:::\n\n\n:::\n\n\n\n::: {.cell exercise='ex1' check='true'}\n```{webr}\n#| exercise: ex1\n#| check: true\ngradethis::grade_this_code()\n```\n:::\n\n\n::::::\n\n\n## Why *R*?\n\n-   We will be using [{{<fa brands r-project>}}]{.blue} throughout the course. Although you should feel that this course is *language-agnostic*, *R* is among one of the best choices for the task:\n\n::: incremental\n1.  Free and open-source\n2.  Diverse and active community working on a broad range of tools\n3.  Actively maintained packages for various purposes - *e.g.*, data manipulation, visualization, modeling, etc)\n4.  Powerful tools for communication, such as *Quarto* and *Shiny*\n5.  Smooth integration with other programming languages, *e.g.*, *SQL*, *Python*, *C*, *C++*, *Fortran*\n6.  [*RStudio*](www.posit.co/rstudio) is one of the best development environments for interactive data analysis\n7.  Top-notch tools and packages for handling financial data and analysis[^3]\n:::\n\n[^3]: For a comprehensive list of R packages designed for finance, please refer to the *R Task View: Empirical Finance* index - access [here](https://cran.r-project.org/web/views/Finance.html).\n\n## Setting up your environment\n\n-   As we get started, there are a couple of things you should remember:\n\n    1.  [{{<fa brands r-project>}}]{.blue} works with *libraries*, which consists of a bundle of functions, methods, data and other components that can be loaded in your session (*i.e*, as you open *RStudio* or any other IDE of your preference)\n\n    2.  To *load* a library, you call `library(x)`, where `x` refers to the package name\n\n    -   If `x` is already installed in your computer, you are good to go\n    -   If, on the other hand, `x` is *not* installed, you need to call `install.packages('x')` before you attempt to load it\n\n    3.  `install.packages()` needs to be called once; `library()` needs to be called at the beginning of each session!\n\n## Setting up your environment, continued\n\n-   To make things easier, ensure to install these packages in your computer and load it at the beginning of every session - I'll make sure to update this list whenever needed throughout the sessions in the course's [official webpage](https://lsmacoris.github.io/lectures/quant-fin.html)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Package names\npackages <- c(\"tidyverse\",\"tidyquant\",\"tidymodels\",\"xts\",\"glue\",\"scales\",\"ggthemes\")\n\n# Install packages not yet installed\ninstalled_packages <- packages %in% rownames(installed.packages())\n\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages])\n}\n\n# Load all packages\nlapply(packages, library, character.only = TRUE)\n\n#Note that you could simply do it iteratively:\n\n#Install if not already available\n  #install.packages('tidyverse')\n  #install.packages('tidyquant')\n  #install.packages('tidymodels')\n  #install.packages('xts')\n  #install.packages('glue')\n  #install.packages('scales')\n  #install.packages('ggthemes')\n\n#Load\n  #library(tidyverse)\n  #library(tidyquant)\n  #library(tidymodels)\n  #library(xts)\n  #library(glue)\n  #library(scales)\n```\n:::\n\n\n\n## Other things you should consider: Quarto\n\n-   In this course, you'll be assigned with three data cases, where you'll need to manipulate code and write your insights altogether. You may have heard of [Jupyter Notebooks](https://jupyter.org/) before as a way to do it. I want to encourage you to give [Quarto](https://quarto.org/) a try\n\n![](Images/F1.png){fig-align=\"center\" width=\"50%\"}\n\n## Other things you should consider: Quarto, continued\n\n-   To install [Quarto]{.blue}, follow [this](https://quarto.org/docs/get-started/) link and choose your Operating System. *RStudio* will automatically locate it and make it as an option:\n\n![](Images/F2.png){fig-align=\"center\" width=\"40%\"}\n\n**Key Highlights**:\n\n1.  Multi-language support (*Python*, *R*, *Julia*, *JavaScript*) and seamless integration with GitHub\n2.  Advanced document formatting and output options: you can choose *pdf*, *html*, *docx*, or even a *reveal.js* presentation (like the one you're reading right now)\n\n\n## Getting started\n\n-   To get started, you'll need to:\n\n::: incremental\n1.  Install *R* using [this](https://cloud.r-project.org/) link\n2.  Install *RStudio* using [this](https://posit.co/download/rstudio-desktop/) link\n3.  Install *Quarto* using [this](https://quarto.org/docs/get-started/) link\n:::\n\n. . .\n\n-   If you're new to *R* or need a refresher on the basics, please refer to [Projects I]{.blue} and [II]{.blue} of the [*Hands-On Programming with R*](https://rstudio-education.github.io/hopr/project-1-weighted-dice.html) [@HandsOn]\n\n. . .\n\n::: callout-tip\n### Tech-setup\n\nIn the official webpage of this course, I have outlined all necessary steps to get started using *R*, as well as some useful tips for those that want to get up to speed on the course's requirements - please follow [this](https://lsmacoris.github.io/lectures/quant-fin.html) link and carefully read the instructions.\n:::\n\n## Course pre-assessment\n\n-   Fill out the form below, share your thoughts, and help me tailor the course to meet your needs and track your progress :slightly_smiling_face:\n\n![](Images/QR-Code.png){fig-align=\"center\" width=\"25%\"}\n\n## References\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}