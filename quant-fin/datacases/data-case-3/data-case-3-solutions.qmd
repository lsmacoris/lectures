---
title: "Data Case III - Monte Carlo Simulation"
author: "Lucas S. Macoris (FGV-EAESP)"
format:
  html:
    page-layout: full
editor: visual
---

# About

This Data Case is part of the *Practical Applications in Quantitative Finance* course, held at FGV-EAESP's undergraduate course in business. Carefully follow the instructions contained in the data case as well as *eClass®* before you make your submission.

## Case Outline

In financial valuation, estimating the fair price of an asset often requires assumptions about future growth rates and discount rates. A common tool is the *Gordon Growth Model*, which expresses the value of a stock as:

$$
P_0 = \dfrac{D_1}{r-g}
$$

Where $P_0$ is the current, share price, $D_1$ is the next's period dividend, $r$ is the discount rate, and $g$ is the growth rate in perpetuity. In words, the share price in period $0$ is the sum of the (expected) future dividends (beginning in period $1$) up to infinity discounted by the cost of opportunity. Dividends in periods $2,3,...,t\rightarrow\infty$ are expected grow linearly by a factor $g$.

In practice, you generally know the next period's dividend, but $r$ and $g$ are both uncertain. In this data case, you will explore how *Monte Carlo* simulations can be used to evaluate the distribution of potential stock prices under uncertainty in inputs.

::: callout-important
### Deliverable

Each group is expected to deliver a single assignment. A submission must be either an `.R` script or a `.qmd` (Quarto) file, **ensuring that both code and interpretations of the results are clearly presented**. Whenever applicable, include concise explanations alongside your code to demonstrate your understanding of the analysis. The due date for this submission is specified on *eClass®*, so please check the platform for details. You are required to clearly document your workflow and assumptions, and provide meaningful explanations alongside your outputs.

To help you structure your submission, I have provided a Quarto mock template, which is already available for you to use. This template is designed to help you seamlessly integrate your code and analysis, ensuring a clear and organized presentation of your work. Feel free to use it as a starting point to format your responses effectively. The mock template can be found in the *Data Cases* folder on *eClass®*.
:::

## Tech-setup

Before you start, make sure that you have your `R` session correctly configured with all the following packages running the code below:

```{r}
#| warning: false
#| message: false

# Package names
packages <- c("tidyverse", "mvtnorm", "rsample")

# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())

if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}

# Load all packages
invisible(lapply(packages, library, character.only = TRUE))


```

Alternatively, you can simply call:

```{r}
#| eval: false #I don't want R to evaluate this code; it is just for presentation purposes
#| echo: true #I want this code chunk to display on the Quarto Document

#Install if not already available
  install.packages('tidyverse')
  install.packages('mvtnorm')
  install.packages('rsample')

#Load
  library(tidyverse)
  library(mvtnorm)
  library(rsample)

```

## Exercise 1

Suppose that $D_1=\$2.00$. Assume the growth rate is fixed at $g=3\%$. Simulate *10,000* values of $r$, assuming it follows a normal distribution with mean $\mu=8\%$ and standard deviation $\sigma=1\%$. Calculate the corresponding distribution of stock prices.

::: callout-tip
### Hint

Make sure to set a seed for reproducibility and ensure that $r>g$ for each simulation. Remove invalid draws where this condition is not met:

```{r}
#| eval: false
#| echo: true

set.seed(123)

```
:::

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

set.seed(123)
D1 <- 2
g <- 0.03
r_sim <- rnorm(10000, mean = 0.08, sd = 0.01)
r_sim <- r_sim[r_sim > g]  # Filter out invalid draws
P0_sim <- D1 / (r_sim - g)

tibble(P0 = P0_sim) %>%
  ggplot(aes(x = P0)) +
  geom_histogram(bins = 50, fill = "steelblue", color = "white") +
  scale_y_continuous(labels=scales::comma)+
  scale_x_continuous(labels=scales::dollar)+
  labs(title = "Distribution of P0 from Uncertainty in r",
       subtitle = 'Drawing 10,000 simulations.',
       x = "P0", y = "Frequency")+
  theme_minimal(base_size = 20)+
  theme(plot.title  = element_text(face='bold'))

```

## Exercise 2

Now, suppose both $r$ and $g$ are random variables:

$$
r \sim \mathcal N(0.08,0.01^2)
$$ $$
g \sim \mathcal N(0.03,0.005^2)
$$

Simulate $10,000$ *independent* draws for each and calculate the distribution of prices.

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

set.seed(123)
r_sim <- rnorm(10000, 0.08, 0.01)
g_sim <- rnorm(10000, 0.03, 0.005)

valid <- r_sim > g_sim
r_sim <- r_sim[valid]
g_sim <- g_sim[valid]
P0_sim <- D1 / (r_sim - g_sim)

tibble(P0 = P0_sim) %>%
  ggplot(aes(x = P0)) +
  geom_histogram(bins = 50, fill = "steelblue", color = "white") +
  scale_y_continuous(labels=scales::comma)+
  scale_x_continuous(labels=scales::dollar)+
    labs(title = "Distribution of P0 from Uncertainty in r and g",
         subtitle = 'Drawing 10,000 simulations.',
         x = "P0", y = "Frequency")+
  theme_minimal(base_size = 20)


```

## Exercise 3

Assume that the correlation between $r$ and $g$ is $\rho=0.9$. Simulate $10,000$ observations from a bivariate normal distribution where the means and the standard deviations of both $r$ and $g$ remain the same, but now you are imposing a correlation structure of $\rho=0.9$ when drawing their distributions. How does this result compare to the previous result you found (*i.e*, when $r$ and $g$ were draw independently from each other)?

::: callout-tip
### Hint

1.  You can use the `mvtnorm` to draw multivariate normal distributions.

2.  To that matter, you can use the following notation:

```{r}
#| eval: false
#| echo: true

set.seed(123)

mu <- c(mean1,mean2)
sigma <- matrix(c(sd1^2, cor*sd1*sd2,
                  cor*sd1*sd2, sd2^2), ncol = 2)

sim <- rmvnorm(10000, mean = mu, sigma = sigma)

```

In words, note that `sigma` is nothing more than the matrix-covariance matrix of $r$ and $g$.
:::

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

mu <- c(0.08, 0.03)
sigma <- matrix(c(0.01^2, 0.9*0.01*0.005,
                  0.9*0.01*0.005, 0.005^2), ncol = 2)

set.seed(123)
sim <- rmvnorm(10000, mean = mu, sigma = sigma)
r_sim <- sim[, 1]
g_sim <- sim[, 2]

valid <- r_sim > g_sim
P0_sim <- D1 / (r_sim[valid] - g_sim[valid])

tibble(P0 = P0_sim) %>%
  ggplot(aes(x = P0)) +
  geom_histogram(bins = 50, fill = "steelblue", color = "white") +
  scale_y_continuous(labels=scales::comma)+
  scale_x_continuous(labels=scales::dollar)+
    labs(title = "Distribution of P0 from Uncertainty in r and g",
         subtitle = 'Drawing 10,000 simulations from a bivariate normal distribution.',
         x = "P0", y = "Frequency")+
  theme_minimal(base_size = 20)


```

## Exercise 4

You are given a sample of $10$ estimates of $r$ and $g$ from comparable firms:

```{r}
#| eval: false
#| echo: true

# Historical series
historical_r <- c(0.08, 0.07, 0.065, 0.095, 0.067,0.088,0.08,0.085,0.079,0.077)
historical_g <- c(0.03, 0.035, 0.02, 0.05, 0.045,0.045,0.06,0.05,0.04,0.01)

```

Use bootstrap sampling to simulate $10,000$ draws of $(r,g)$ pairs and compute the stock price distribution. Use a sample size of $10$ with replacement for each random variable.

::: callout-tip
### Hint

1.  Use the `replicate()` function together with the `mean` and the `sample` function to replicate the mean from sampling $10$ observations for $r$ and $g$, with replacement.

2.  With that, create a `for loop` that goes from `1:10000` and calculates `p_0` given each pair `(r_i,g_i)`. Store the results in a vector and iterate.
:::

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

# Simulated example dataset
set.seed(123)

#Number of simulations
n_sim=10000

# Historical series
historical_r <- c(0.08, 0.07, 0.065, 0.095, 0.067,0.088,0.08,0.085,0.079,0.077)
historical_g <- c(0.03, 0.035, 0.02, 0.05, 0.045,0.045,0.06,0.05,0.04,0.01)

# For each simulation, bootstrap 10 values and take the mean → length n_sim vector
boot_r <- replicate(n_sim, mean(sample(historical_r, 10, replace = TRUE)))
boot_g <- replicate(n_sim, mean(sample(historical_g, 10, replace = TRUE)))

P0_sim <- vector()

for(i in 1:n_sim){  
  r_i <- boot_r[i]
  g_i <- boot_g[i]
  
  p_i = D1/(r_i-g_i)
  
  P0_sim=c(P0_sim,p_i)
  }

P0_sim <- na.omit(P0_sim)

tibble(P0 = P0_sim) %>%
  ggplot(aes(x = P0)) +
  geom_histogram(bins = 50, fill = "steelblue", color = "white") +
  scale_y_continuous(labels=scales::comma)+
  scale_x_continuous(labels=scales::dollar)+
    labs(title = "Bootstrapped P0 simulation",
         subtitle = 'Drawing 10,000 simulations from a bivariate normal distribution.',
         x = "P0", y = "Frequency")+
  theme_minimal(base_size = 20)


```

## Exercise 5

Suppose that the baseline price for the firm is $\$40.35$. Based on our findings from Exercise 4, what is the % of scenarios where you would see an undervalued investment opportunity and, therefore, would signal a buying opportunity?

```{r}
#| warning: false
#| message: false
#| fig-width: 12
#| fig-height: 8

tibble(P0 = P0_sim) %>%
  mutate(Signal=ifelse(P0>=40.35,"Long","Short"))%>%
  ggplot(aes(x = P0,fill=Signal)) +
  geom_histogram(bins = 50, color = "white") +
  scale_fill_manual(values=c('darkgreen','darkred'))+
  annotate("text",
           x=70,
           y=400,
           label=paste0(
             'Simulated price is higher\n than baseline in ',
             scales::percent(mean(P0_sim>40.35)),' of the cases'))+
  scale_y_continuous(labels=scales::comma)+
  scale_x_continuous(labels=scales::dollar)+
    labs(title = "Bootstrapped P0 simulation",
         subtitle = 'Drawing 10,000 simulations from a bivariate normal distribution.',
         x = "P0", y = "Frequency")+
  theme_minimal(base_size = 20)+
  theme(legend.position = 'bottom')



```
