---
#title: "Risk and Return"
author: "Lucas S. Macoris"
format:
  live-revealjs:
    title: 'Introduction and Course Overview'
    theme: [default, ../~ Metadata/custom.scss]
    auto-stretch: false
    author: 'Lucas S. Macoris'
    logo: 'Images/logo.jpg'
    footer: "[@ Website](https://lsmacoris.github.io/) | [@ Slides](https://lsmacoris.github.io/lectures/strat-fin) | [@ Office-hour appointments](https://calendly.com/lucas-macoris-fgv/appointment-lsm)"
    toc: false
    cls: ../~ Metadata/abntex2.cls
    incremental: true
    bibliography: '../~ Metadata/Bibliography.bib'
    slide-number: true
    show-slide-number: all
    transition: slide
    background-transition: fade
    chalkboard: true
    width: 1600
    height: 900
    smaller: false
    show-hints: true
    show-solutions: true
    webr:
      packages:
        - tidyverse
        - xts
        - glue
        - yaml
    resources:
      - Assets
    render-df: gt-interactive

editor: visual
from: markdown+emoji
---

{{< include ./_extensions/r-wasm/live/_knitr.qmd >}}



{{< include ./_extensions/r-wasm/live/_gradethis.qmd >}}

```{r echo=FALSE}
#Initialize

library(tidyverse)
library(quantmod)
library(glue)

assets= c('AAPL','MSFT','NVDA')
asset_list=lapply(assets,function(x) getSymbols(x,auto.assign = FALSE))%>%
  setNames(assets)%>%
  map(as.data.frame)%>%
  map(rownames_to_column)%>%
  map(~setNames(.,c('Timestamp','Open','High','Low','Close','Volume','Adjusted')))
walk2(assets,asset_list,\(name,df) write_csv(df,glue('Assets/{name}.csv')))

```

## Welcome to the Course

::: nonincremental
1.  Overview and Course Organization
2.  Grading and Evaluations
3.  Navigating through the syllabus
4.  How you can get the best of this course
5.  Overall Q&A
:::

## Overview

-   With the recent advances in technical resources and the vast availability of financial information, finance practitioners are required to generate reproducible and scalable analysis in a timely fashion to guide decision-making:

    1.  How can I *continuously* optimize the risk-return trade-off of my portfolio over time?
    2.  What is the sensitivity of my investment decisions to changes in growth rates, discount rates, and expected margins?
    3.  How can I assess the ability of a given trading strategy to outperform the market over time?

. . .

$\rightarrow$ *To that point, departing from the general tools, such as Excel, to more advanced tools, such as* [{{<fa brands r-project>}}]{.blue} and [{{<fa brands python>}}]{.blue}, *is an imperative change!*

-   **The goal of this course**: translate [theoretical concepts]{.blue} learned on the core finance courses to [practical applications]{.blue} that can guide decision making in real-world financial markets

## Course Structure

-   This is a [hands-on]{.blue}, [practical]{.blue} course on *Quantitative Finance* with applications using [{{<fa brands r-project>}}]{.blue} and [{{<fa brands python>}}]{.blue}, two of the most widely used open-source software for data analysis. It will be structured in topics that are of interest to Finance practitioners, aiming to include, but not limited to:

    1.  Collecting and organizing financial data
    2.  Equity valuation
    3.  Sensitivity analysis and simulation
    4.  Portfolio optimization
    5.  Backtesting
    6.  Event Analysis

-   Students are also expected to interact with leading industry practitioners focused on financial applications using open-source languages, aiming to discover more about the possibilities of applying the skills learned in this course in the financial industry

## Bibliography

::: nonincremental
-   **Mandatory reading**: we will mostly follow *Tidy Finance* [@tidyfinance], as our text-book. Other relevant reading materials include:
    1.  *R for Data Science* [@r4ds]
    2.  *Quantitative Trading with R* [@r-trading]
    3.  *Mastering Shiny* [@shiny]
-   **Supplementary Reading**:
    1.  *Corporate Finance* [@BDM] - a companion for finance-related topics
    2.  Other optional contents, such as *Harvard Business School (HBS) Cases*
:::

::: callout-important
### Important

Most of the references listed in this bibliography have an open-source version that is hosted online, where you can copy-paste code chunks directly into your [{{<fa brands r-project>}}]{.blue} session. All contents will restricted access will be provided upfront.
:::

## Grading and Evaluations

. . .

**Grading will be composed of the following activities:**

1.  Handout Data Cases (**40%**)
2.  Capstone Project (**40%**)
3.  Project Showcase (**15%**)
4.  In-class Participation (**5%**)

. . .

-   You can find the details of any of these activities in the official syllabus (available on *eClass®*)
-   In case of any questions, feel free to reach out to [lucas.macoris\@fgv.br](mailto:lucas.macoris@fgv.br)

. . .

::: callout-important
### Office-hours

I also host office-hours (by appointment) on Thursdays, 5PM-6PM. In these sessions, I'll be more than happy to help you with anything you need from this course. Use the *Office-hour Appointments* link at the bottom of this slide to schedule an appointment (or click [here](https://calendly.com/lucas-macoris-fgv/appointment-lsm)).
:::

## Getting the best of this course

![](Images/what-a-week.jpeg){width="50%," fig-align="center"}

## Getting the best of this course

. . .

**How you can get the best of this course**

1.  Follow *FGV-EAESP* code of conduct
2.  Be [organized]{.blue}: pay attention to pre-readings and deliverables
3.  Be [proactive]{.blue}: ask questions and participate in discussions
4.  [Take the lead]{.blue} on your learning: you are the ultimate responsible for your success!

. . .

**How the professor can facilitate you getting the best of this course**

1.  All mandatory content and classes will be conducted in *English*
2.  Provide a safe and open space for questions, both in-person and remote
3.  Motivate students, both from the academic and practitioner standpoints
4.  Provide opportunities to extend knowledge beyond the mandatory readings

## Getting the best of this course, continued

-   **Tech setup**: in the [official page](www.google.com) of your course, you will find instructions on how to properly set up your computer in terms of downloading all necessary softwares, packages, and customizing your [{{<fa brands r-project>}}]{.blue} session[^1]

-   **Code Replication**: right after we are done with a given topic, try to replicate the in-class handouts on your end and check if you are able to yield the same outputs

-   **Showcase**: *programming*, *data science*, *analytics*, *machine learning*, and so on...these terms are on the hype of today's job market - although few people *really* know how to make meaningful impact with it. Use this course as an opportunity to differentiate and showcase the skills you've learned and stand out to potential employers[^2]

[^1]: While we will be using *FGV-EAESP*'s facilities, where you will have immediate access to all the necessary configurations, ensure to setup your personal computer so as to ensure that you can replicate the contents from the lectures.

[^2]: See [*Artificial Intelligence is losing hype*](https://www.economist.com/finance-and-economics/2024/08/19/artificial-intelligence-is-losing-hype) (*The Economist*)

## On the usage of *gen-AI*

::: callout-important
### On the usage of ChatGPT and other *gen-AI* tools

Generative Artificial Intelligent (*gen-AI*) adoption is quickly spreading through corporate life and universities. At this point, it is worth the question...[am I allowed to use *gen-AI* tools in this course]{.blue}?
:::

-   The answer is [yes]{.blue}! Not only you are *allowed*, but also *encouraged* to do so:
    1.  Use *gen-AI* tools to proof-read your work, get insights, and troubleshoot errors
    2.  Learn to be *skeptical* around the solutions you have been provided with
    3.  Evaluations will be based on *how* you can [interpret]{.blue}, [understand]{.blue}, and [showcase]{.blue} your solution to the broader audience!

. . .

$\rightarrow$ See [*AI-powered coding pulls in almost \$1bn of funding to claim ‘killer app’ status*](https://www.ft.com/content/4868bd38-613c-4fa9-ba9d-1ed8fa8a40c8) (*Financial Times*)

## How to use these slides

-   These slides leverage [Quarto](quarto.org), an open-source scientific and technical publishing system from [Posit](https://posit.co) (formerly RStudio):

    1.  Create dynamic content with [{{<fa brands r-project>}}]{.blue}, [{{<fa brands python>}}]{.blue}, [{{<fa brands react>}}]{.blue}, among other programming languages
    2.  Publish reproducible, production quality articles, presentations, dashboards, websites, blogs, and books in *HTML*, *PDF*, *Word*, *ePub*, and more
    3.  Write beatufil, clean technical documents using markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more

-   For our course, we'll use the following notation:

1.  Links will be colored in [blue](https://google.com)
2.  Inline equations and variables will be rendered in `gray`
3.  Code chunks will be provided along with outputs (`R`)

## An example of a code chunk

:::: panel-tabset
### Result

::: callout-note
In the `R` panel, hit *Show the Code* to display the code inside the tabset. Hit the {{< fa clipboard >}} button at the top-right to copy it to your session.
:::

```{r}
#| echo: false
#| fig-align: center
#| fig-height: 4

#install.packages('ggplot2') #Install ggplot2 if not available
library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
                  xvar = 1:20 + rnorm(20,sd=3),
                  yvar = 1:20 + rnorm(20,sd=3))

ggplot(dat, aes(x=xvar, y=yvar)) +
  geom_point(shape=1) + 
  geom_smooth()+
  labs(title = 'Title',
       x='X variable',
       y='Y variable')+
  theme_minimal()

```

### R

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| echo: true
#| eval: false

library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
                  xvar = 1:20 + rnorm(20,sd=3),
                  yvar = 1:20 + rnorm(20,sd=3))

ggplot(dat, aes(x=xvar, y=yvar)) +
  geom_point(shape=1) + 
  geom_smooth()

```
::::

## Interactive Learning

::: {#lst-example}
```{webr}
#| completion: true
#| min-lines: 7
#| max-lines: 20
#| fig-width: 8
#| fig-height: 4
#Set the ticker
ticker='AAPL'
#Read the data
read.csv(glue('Assets/{ticker}.csv'))%>%
#Select the first two columns
select(Timestamp,Adjusted)%>%
mutate(Timestamp=as.Date(Timestamp))%>%
#Transform to time-series based object and plot
as.xts()%>%plot(main=glue('{ticker} prices are skyrocketing! 🚀'))
```

We will extensively leverage interactive learning whenever possible. In selected sections, called `Listings`, you will be prompted with an interactive `R` console that you can use to run existing and new code to a "virtual" session. Try changing the ticker to `NVDA` and check if anything has changed.
:::

## Interactive Learning, continued

:::::: panel-tabset
## Exercise

::: {#lst-ex1}
```{webr}
#| caption: Sample Exercise
#| exercise: ex1
#| completion: true
#| min-lines: 7
#| max-lines: 20
#| fig-width: 8
#| fig-height: 4

#Set the ticker
Data=read.csv(glue('Assets/_____.csv'))
Data=select(Data,c(Timestamp,_____))
Data=tail(Data,__)
Data
```

You can use the `Hints` and `Solution` buttons to interact with the prompt. Even if you submit the wrong answer, a live-tutoring feature will provide you with a handful of tips to adjust your code and resubmit your solution. For example, complete the code to read Microsoft price (`MSFT.csv`) data and select the latest 10 OHLC (Open, High, Low, Close) information. The dataset is arranged in descendant format (latest price information is at the bottom of the table).
:::

## Hints

::: {.hint exercise="ex1"}
You can access the names of the columns using `names(Data)` to find the column that refers to closing prices:

``` r
names(Data)
```

You can also select specific columns by using the `select()` function:

``` r
select(Data,c(column1,column2,...,column_n))`
```
:::

## Solution

::: {.solution exercise="ex1"}
First, use the `names()` function to retrieve the names of the columns available in the dataset.

After that, use the `tail()` function to retrieve only the latest 10 observations.

```{webr}
#| exercise: ex1
#| solution: true

#Set the ticker
Data=read.csv(glue('Assets/MSFT.csv'))
Data=select(Data,c(Timestamp,Open,High,Low,Close))
Data=tail(Data,10)
Data
```
:::

```{webr}
#| exercise: ex1
#| check: true
gradethis::grade_this_code()
```
::::::

## References
